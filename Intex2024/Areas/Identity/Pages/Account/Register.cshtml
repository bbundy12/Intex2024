@page
@model RegisterModel
@{
    ViewData["Title"] = "Register";
}

<style>
    /* Add the same background color and padding as the login page */
    body {
        background-color: rgba(255, 215, 0, 0.25);
        padding-bottom: 100px;
    }
</style>

<div class="row justify-content-center">
    <div class="col-md-6">
        <div class="row">
            <!-- Image column -->
            <div class="col-md-6">
                <img src="~/img/Emit.png" alt="Image Description" class="img-fluid" style="max-height: 500px;">
            </div>
            <!-- Registration form column -->
            <div class="col-md-6">
                <section>
                    <form id="registerForm" asp-route-returnUrl="@Model.ReturnUrl" method="post">
                        <h2>Welcome! Create a new account below.</h2>
                        <hr />
                        <div asp-validation-summary="ModelOnly" class="text-danger" role="alert"></div>
                        <div class="form-floating mb-3">
                            <input asp-for="Input.Email" class="form-control" autocomplete="username" aria-required="true" placeholder="name@example.com" />
                            <label asp-for="Input.Email">Email</label>
                            <span asp-validation-for="Input.Email" class="text-danger"></span>
                        </div>
                        <div class="form-floating mb-3">
                            <input asp-for="Input.Password" class="form-control" autocomplete="new-password" aria-required="true" placeholder="password" />
                            <label asp-for="Input.Password">Password</label>
                            <span asp-validation-for="Input.Password" class="text-danger"></span>
                        </div>
                        <div class="form-floating mb-3">
                            <input asp-for="Input.ConfirmPassword" class="form-control" autocomplete="new-password" aria-required="true" placeholder="password" />
                            <label asp-for="Input.ConfirmPassword">Confirm Password</label>
                            <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
                        </div>
                        <button id="registerSubmit" type="submit" class="w-100 btn btn-lg btn-primary">Register</button>
                    </form>
                </section>
                <section>
                    <hr />
                    @{
                        if ((Model.ExternalLogins?.Count ?? 0) == 0)
                        {
                            <div>
                                <p>
                                    There are no external authentication services configured. See this <a href="https://go.microsoft.com/fwlink/?LinkID=532715">article
                                    about setting up this ASP.NET application to support logging in via external services</a>.
                                </p>
                            </div>
                        }
                        else
                        {
                            <form id="external-account" asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="form-horizontal">
                                <div>
                                    <p>
                                        @foreach (var provider in Model.ExternalLogins!)
                                        {
                                            <button type="submit" class="btn btn-primary" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">@provider.DisplayName</button>
                                        }
                                    </p>
                                </div>
                            </form>
                        }
                    }
                </section>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}

<html>
<head>
  <meta name="google-signin-client_id" content="YOUR_CLIENT_ID.apps.googleusercontent.com">
</head>
<body>
  <div id="my-signin2"></div>
  <script>
    function onSuccess(googleUser) {
      console.log('Logged in as: ' + googleUser.getBasicProfile().getName());
    }
    function onFailure(error) {
      console.log(error);
    }
    function renderButton() {
      gapi.signin2.render('my-signin2', {
        'scope': 'profile email',
        'width': 240,
        'height': 50,
        'longtitle': true,
        'theme': 'dark',
        'onsuccess': onSuccess,
        'onfailure': onFailure
      });
    }
  </script>

  <script src="https://apis.google.com/js/platform.js?onload=renderButton" async defer></script>
</body>
</html>
